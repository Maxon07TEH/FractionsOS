This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
kernel/
  x64/
    boot.asm
    main.c
linker.ld
Makefile
OSInfo.txt
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="kernel/x64/boot.asm">
section .multiboot_header
header_start:
    dd 0xe85250d6                ; Magic number
    dd 0                         ; Architecture 0 (i386)
    dd header_end - header_start ; Header length
    dd 0x100000000 - (0xe85250d6 + 0 + (header_end - header_start)) ; Checksum

    ; End tag
    dw 0    ; Type
    dw 0    ; Flags
    dd 8    ; Size
header_end:
</file>

<file path="kernel/x64/main.c">
#include "drivers/vga.h"

void kernel_main(void) {
    vga_initialize();
    vga_write_string("Kernel loaded successfully!\n");
    
    for(;;) __asm__("hlt");
}
</file>

<file path="linker.ld">
ENTRY(_start)

SECTIONS {
    . = 1M;
    .text : ALIGN(4K) {
        *(.multiboot)
        *(.text)
    }
    .rodata : ALIGN(4K) {
        *(.rodata)
    }
    .data : ALIGN(4K) {
        *(.data)
    }
    .bss : ALIGN(4K) {
        *(COMMON)
        *(.bss)
    }
}
</file>

<file path="Makefile">
ARCH ?= x64
TARGET = FractionsOS.$(ARCH).bin
ISO = FractionsOS.iso

.PHONY: all clean iso run

all:
    @./scripts/compile.sh -$(ARCH)

iso: $(TARGET)
    @./scripts/make-iso.sh

run:
    @./scripts/run.sh $(ARCH)

clean:
    @./scripts/clean.sh
</file>

<file path="OSInfo.txt">
executable format - .pe
disk mount - like Windows
kernel type - Hybrid(micro-monolythic)
bootloader - EFI-Grub(with multiboot2)
base filesystem - Fat64
OS name - FractionsOS
</file>

</files>
